name: Terraform Deployment Module

on:
  workflow_call:
    inputs:
      AWS_Deployment_Role_Arn:
        required: true
        type: string
      Terraform_Backend_Configuration_File:
        required: true
        type: string
      Terraform_Deployment_Configuration_File:
        required: true
        type: string

env:
  WORKING_DIR: ${{ github.workspace }}/Ecomm/Iac-aws/eks

permissions:
  contents: read
  issues: write

jobs:
  plan-and-apply-deployment:
    name: "Terraform Init, Validate, Plan, Upload State, Apply"
    runs-on: ubuntu-latest
    container:
      image: hashicorp/terraform:1.5.0
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ inputs.AWS_Deployment_Role_Arn }}
          aws-region: us-east-1

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Verify environment
        run: |
          echo "Working directory: $(pwd)"
          terraform version
          ls -la

      - name: Terraform Init
        run: |
          rm -rf .terraform
          terraform init -backend-config=${{ inputs.Terraform_Backend_Configuration_File }}

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: |
          export TF_LOG=INFO
          terraform plan -out terraform.plan -input=false -lock=false -var-file ${{ inputs.Terraform_Deployment_Configuration_File }}

      - name: Store plan
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: terraform.plan

      - name: Terraform show
        run: |
          terraform show -json > terraform_state.json

      - name: Upload Terraform state JSON
        uses: actions/upload-artifact@v4
        with:
          name: terraform-state
          path: terraform_state.json

      - name: Terraform Apply
        run: |
          export TF_LOG=INFO
          terraform apply -auto-approve terraform.plan
          terraform show -json > terraform_state.json
